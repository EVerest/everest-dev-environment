# syntax=docker/dockerfile:1
FROM ghcr.io/everest/everest-ci/dev-env-base:v1.5.4

# Build arguments for customization
ARG UID=1000
ARG GID=1000
ARG EVEREST_TOOL_BRANCH=main
ARG ORGANIZATION_ARG=Pionix
ARG REPOSITORY_HOST=github.com
ARG REPOSITORY_USER=git
ARG COMMIT_HASH

# Update the package list and install dependencies (run as root)
USER root
RUN apt-get update && apt-get install -y \
    protobuf-compiler \
    libsystemd-dev \
    tmux \
    chrpath \
    cpio \
    diffstat \
    gawk \
    wget \
    zstd \
    liblz4-tool \
    file \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y locales \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales  \
    && update-locale LANG=en_US.UTF-8 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8


# Modify the existing docker user and group to match the host's UID and GID
RUN groupmod --gid ${GID} docker && \
    usermod --uid ${UID} --gid ${GID} docker

# Build and install sdbus-cpp (run as root since it needs to install to system directories)
RUN git clone https://github.com/Kistler-Group/sdbus-cpp.git && \
    cd sdbus-cpp && \
    cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && \
    cd build && \
    cmake --build . && \
    cmake --build . --target install && \
    cd ../.. && \
    rm -rf sdbus-cpp

# Remove existing everest-cmake directory (run as root since it's in system directories)
RUN rm -rf /usr/lib/cmake/everest-cmake

# Switch to the new user
USER docker
WORKDIR /home/docker

# Add known hosts for git repositories
RUN mkdir -p -m 0600 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts && \
    ssh-keyscan git.pionix.com >> ~/.ssh/known_hosts

# EVerest Development Tool - Dependencies
RUN pip install --break-system-packages \
    docker==7.1.0 \
    nanopb

# EVerest Development Tool with cache busting based on commit hash
RUN python3 -m pip install --break-system-packages \
    git+https://github.com/EVerest/everest-dev-environment@${EVEREST_TOOL_BRANCH}#subdirectory=everest_dev_tool

# Set environment variables
ENV EVEREST_DEV_TOOL_DEFAULT_GIT_METHOD=ssh
ENV EVEREST_DEV_TOOL_DEFAULT_GIT_HOST=${REPOSITORY_HOST}
ENV EVEREST_DEV_TOOL_DEFAULT_GIT_SSH_USER=${REPOSITORY_USER}
ENV EVEREST_DEV_TOOL_DEFAULT_GIT_ORGANIZATION=${ORGANIZATION_ARG}
ENV LD_LIBRARY_PATH=/usr/local/lib

# Set up welcome message
RUN echo "echo \"ðŸš˜ Welcome to the EVerest development environment!\"" >> /home/docker/.bashrc
